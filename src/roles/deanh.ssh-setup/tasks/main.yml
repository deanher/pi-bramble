---
- name: Generate SSH Key
  expect:
    command: ssh-keygen -t rsa -b 4096 -f {{ ssh_src_folder }}/id_rsa -q
    responses:
      'Overwrite \(y/n\)?': 'n'
      'passphrase': ''
      'again': ''
    echo: yes
  failed_when: false
  register: ssh_auth_key
  no_log: false
  run_once: true
  delegate_to: "{{ is_local | ternary('localhost', controller) }}"

- name: Create .ssh directory
  file:
    path: "{{ ssh_folder }}"
    state: directory

- name: Extract local public key
  shell: "cat {{ ssh_src_folder }}/id_rsa.pub"
  register: public_key
  no_log: true
  delegate_to: localhost
  check_mode: false
  when: 
    - is_local
    - ssh_auth_key is changed
  run_once: true

- name: Add local public key to authorized_keys
  lineinfile:
    path: "{{ ssh_folder }}/authorized_keys"
    line: "{{ item }}"
    state: present
  with_items:
    - "{{ public_key.stdout_lines }}"
  when: 
    - is_local
    - ssh_auth_key is changed
  no_log: true

- name: Extract "{{ controller }}" public key
  shell: "cat {{ ssh_src_folder }}/id_rsa.pub"
  register: public_key
  no_log: true
  delegate_to: "{{ controller }}"
  check_mode: false
  when: 
    - not is_local
    - ssh_auth_key is changed
  run_once: true

- name: Add "{{ controller }}" public key to authorized_keys
  lineinfile:
    path: "{{ ssh_folder }}/authorized_keys"
    line: "{{ item }}"
    state: present
  with_items:
    - "{{ public_key.stdout_lines }}"
  when: 
    - not is_local
    - ssh_auth_key is changed
    - agents_group in group_names
  no_log: true
  
- name: Write SSH Configs
  include_tasks: ssh-configs.yml

- name: Set variable for hosts file
  set_fact:
    remote_hosts: "{{ [ controller ] + groups[agents_group] if is_local else groups[agents_group] }}"

- name: Write /etc/hosts file
  lineinfile:
    path: /etc/hosts
    line: "{{ '{:<15} {}'.format(hostvars[item].host_address, item) }}"
    state: present
  loop: "{{ remote_hosts }}"
  become: true
  run_once: true
  delegate_to: "{{ is_local | ternary('localhost', controller) }}"
