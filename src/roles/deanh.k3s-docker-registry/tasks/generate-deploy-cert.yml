---
- name: Create certs directory
  file:
    path: "{{ certs_base_dir }}"
    state: directory
  connection: local
  run_once: true
  become: false

- name: gitignore the "{{ certs_base_dir }}"
  lineinfile: 
    line: "{{ certs_base_dir }}/"
    dest: "{{ certs_base_dir }}/.gitignore"
    create: true
  connection: local
  become: false
  run_once: true

- name: Check if Docker Registry cert already exists.
  stat:
    path: "{{ certs_base_dir }}/docker-registry/tls.crt"
  connection: local
  become: false
  run_once: true
  register: cert_docker_registry_stat

- name: Generate a cert and key for the Docker Registry.
  command: >
    openssl req -x509 -nodes -days 3650 -newkey rsa:2048
    -keyout {{ certs_base_dir }}/docker-registry/tls.key
    -out {{ certs_base_dir }}/docker-registry/tls.crt
    -subj "/CN={{ docker_registry_domain}}"
    -addext "subjectAltName=DNS:{{ docker_registry_domain}}"
  connection: local
  become: false
  run_once: true
  when: not cert_docker_registry_stat.stat.exists

- name: Set vars for Docker Registry certs (for all hosts).
  set_fact:
    docker_registry_key: "{{ lookup('file', certs_base_dir  + '/docker-registry/tls.key') }}"
    docker_registry_crt: "{{ lookup('file', certs_base_dir  + '/docker-registry/tls.crt') }}"

- name: Add registry to hosts file.
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[docker_registry_ingress_host].host_address }}  {{ docker_registry_domain }}"
    regexp: '.*{{ docker_registry_domain }}$'
    state: present
  when: deploy_target != 'docker'
  become: true

- name: Ensure Docker cert store directory exists.
  file:
    path: "/etc/docker/certs.d/{{ docker_registry_domain }}/"
    state: directory
    recurse: true
  become: true

- name: Copy Docker Registry cert into Docker cert store.
  copy:
    src: "{{ certs_base_dir }}/docker-registry/tls.crt"
    dest: "/etc/docker/certs.d/{{ docker_registry_domain }}/ca.crt"
  become: true
