---
- name: Check if Docker Registry cert already exists.
  stat:
    path: "{{ playbook_dir }}/manifests/docker-registry/cert/tls.crt"
  connection: local
  become: false
  run_once: true
  register: cert_docker_registry_stat

- name: Generate a cert and key for the Docker Registry.
  command: >
    openssl req -x509 -nodes -days 3650 -newkey rsa:2048
    -keyout {{ playbook_dir }}/manifests/docker-registry/cert/tls.key
    -out {{ playbook_dir }}/manifests/docker-registry/cert/tls.crt
    -subj "/CN={{ docker_registry_domain}}"
    -addext "subjectAltName=DNS:{{ docker_registry_domain}}"
  connection: local
  become: false
  run_once: true
  when: not cert_docker_registry_stat.stat.exists

- name: Set vars for Docker Registry certs (for all hosts).
  set_fact:
    docker_registry_key: "{{ lookup('file', playbook_dir  + '/manifests/docker-registry/cert/tls.key') }}"
    docker_registry_crt: "{{ lookup('file', playbook_dir  + '/manifests/docker-registry/cert/tls.crt') }}"

- name: Add registry to hosts file.
  lineinfile:
    dest: /etc/hosts
    line: "{{ hostvars[docker_registry_ingress_host].host_name }}  {{ docker_registry_domain }}"
    regexp: '.*{{ docker_registry_domain }}$'
    state: present
  when: deploy_target != 'docker'
  become: true

- name: Ensure Docker cert store directory exists.
  file:
    path: "/etc/docker/certs.d/{{ docker_registry_domain }}/"
    state: directory
    recurse: true
  become: true

- name: Copy Docker Registry cert into Docker cert store.
  copy:
    src: "{{ playbook_dir }}/manifests/docker-registry/cert/tls.crt"
    dest: "/etc/docker/certs.d/{{ docker_registry_domain }}/ca.crt"
  become: true

- name: Create "registries.yaml"
  file:
    path: /etc/rancher/k3s/registries.yaml
    state: touch
  become: true
  when: "'servers' in group_names"

- name: Add registry to "registries.yaml"
  lineinfile:
    path: /etc/rancher/k3s/registries.yaml
    line: "{{ item }}"
    state: present
  become: true
  when: "'servers' in group_names"
  with_items:
    - 'mirrors:'
    - '  {{ docker_registry_domain }}:'
    - '    endpoint:'
    - '      - "https://{{ docker_registry_domain }}:5000"'
