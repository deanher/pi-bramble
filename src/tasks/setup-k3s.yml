---
- name: Setup k3s servers
  shell: >
    curl -sfL https://get.k3s.io | sh -s - server 
    --token={{ k3s_token }} 
    --datastore-endpoints="postgres://postgres:{{ postgres_password }}@{{ postgres_host }}:5432/k3s" 
    --tls-san={{ k3s_master_node }}
  when: "'servers' in group_names"

- name: Setup k3s workers
  shell: >
    curl -sfL https://get.k3s.io | K3S_URL="https://{{ k3s_master_node }}:6443" K3S_TOKEN={{ k3s_token }} sh -
  when: "'agents' in group_names"

- name: Setup k3s registry
  shell: >
    kubectl apply -f {{ playbook_dir }}/manifests/docker-registry/manifest.yaml
  register: k8s_result
  until: k8s_result is success
  retries: 10
  delay: 2
  # delegate_to: "{{ item }}"
  # loop: "{{ groups.servers }}"
  when: "'servers' in group_names"
  run_once: true

- name: Create "registries.yaml"
  file:
    path: /etc/rancher/k3s/registries.yaml
    state: touch
  become: true
  # delegate_to: "{{ item }}"
  # loop: "{{ groups.servers }}"
  when: "'servers' in group_names"
  run_once: true

- name: Add registry to "registries.yaml"
  lineinfile:
    path: /etc/rancher/k3s/registries.yaml
    line: "{{ item }}"
    state: present
  become: true
  # delegate_to: "{{ item }}"
  # loop: "{{ groups.servers }}"
  when: "'servers' in group_names"
  with_items:
    - "mirrors:"
    - "  {{ docker_registry_domain }}:"
    - "    endpoint:"
    - "      https://{{ docker_registry_domain }}"

- name: Restart k3s-servers
  service:
    name: k3s
    state: restarted
    sleep: 5
  become: true
  when: "'servers' in group_names"

- name: Restart k3s-agents
  service:
    name: k3s-agent
    state: restarted
    sleep: 5
  become: true
  when: "'agents' in group_names"
